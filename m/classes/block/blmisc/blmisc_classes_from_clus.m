%> @brief Assign classes from one data column from an @c irdata_clus object
%>
%> @ingroup classlabelsgroup
%>
%> This block is used to use the clusters generated by a clustering method as the classes in a dataset. Note that both
%> datasets in case must have same \ref no and represent the same physical data.
%>
%> @sa uip_blmisc_classes_from_clus.m
classdef blmisc_classes_from_clus < blmisc_classes
    properties
        data_clus;
        idx_fea;
        classes_to_remove;
    end;
    
    methods
        function o = blmisc_classes_from_clus(o)
            o.classtitle = 'From Clusters';
            o.flag_params = 1;
        end;
    end;
    
    methods(Access=protected)
        function data = do_use(o, data)
            C = renumber_vector_idooo(o.data_clus.X(:, o.idx_fea));
            cc = unique(C);
            cc2 = cc(cc >= 0); % Only valid Clusters
            no_classes = numel(cc2);

            data.classlabels = cell(1, no_classes);
            % Produces class labels
            for i = 1:no_classes
                data.classlabels{i} = sprintf('Class %d', i-1);
            end;
            
            
            data.classes = C;
            
            % Assures that class numbers will start at 0 and end at NumberOfClasses-1
            for i = 1:numel(cc2)
                data.classes(C == cc2(i)) = i-1;
            end;
            
            % Marks classes to remove as -2 (outlier)
            for i = 1:numel(o.classes_to_remove)
                data.classes(C == o.classes_to_remove(i)) = -2;
            end;
            data = data.eliminate_unused_classlabels();
        end;
    end;  
end

